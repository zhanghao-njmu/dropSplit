% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dropSplit.R
\name{dropSplit}
\alias{dropSplit}
\title{Automatically identify cell-containing and empty droplets for droplet-based scRNAseq data using dropSplit.}
\usage{
dropSplit(
  counts,
  score_cutoff = 0.8,
  modelOpt = FALSE,
  xgb_params = NULL,
  xgb_nrounds = 20,
  xgb_thread = 8,
  bounds = list(),
  xgb_nfold = 5,
  xgb_early_stopping_rounds = 5,
  xgb_metric = "auc",
  opt_initPoints = length(bounds) + 1,
  opt_itersn = 10,
  opt_thread = 1,
  ...
)
}
\arguments{
\item{counts}{A \code{matrix} object or a \code{dgCMatrix} object which columns represent features and rows represent samples.}

\item{score_cutoff}{A cutoff value for dropSplit to determine if a droplet is cell-containing or empty.}

\item{modelOpt}{Whether to optimize the model using \code{\link{xgbOptimization}}.If true, will overwrite the parameters list in \code{xgb_params}.}

\item{xgb_params}{The \code{list} of XGBoost parameters.}

\item{xgb_nrounds}{Max number of boosting iterations.}

\item{xgb_thread}{Number of thread used in \code{\link[xgboost]{xgb.cv}}.}

\item{bounds}{A named list of lower and upper bounds for \code{params} in \code{\link[xgboost]{xgb.cv}}. The names of the list should be arguments passed to xgb.cv Use "L" suffix to indicate integers. A fixed parameter should be a two-length vector with the same value, i.e. bound=list(lambda = c(5, 5))}

\item{xgb_nfold}{The original dataset is randomly partitioned into nfold equal size subsamples.}

\item{xgb_early_stopping_rounds}{If NULL, the early stopping function is not triggered. If set to an integer k, training with a validation set will stop if the performance doesn't improve for k rounds. Setting this parameter engages the \code{cb.early.stop} callback.}

\item{xgb_metric}{A evaluation metric to be used in cross validation and will to be maximized. Possible options are:
\itemize{
\item \code{auc} Area under curve
\item \code{aucpr} Area under PR curve
}}

\item{opt_initPoints}{Number of points to initialize the process with. Points are chosen with latin hypercube sampling within the bounds supplied.}

\item{opt_itersn}{The total number of times \code{xgb.cv} will be run after initialization.}

\item{opt_thread}{Number of thread used in \code{\link[ParBayesianOptimization]{bayesOpt}}.}

\item{...}{Other arguments passed to \code{\link{xgbOptimization}}.}
}
\value{
A list of two object:
\describe{
\item{meta_info}{A data.frame object of evaluation metrics to be used in dropSplit and the final droplet classification.}
\item{model}{The XGBoost model used in dropSplit for classification.}
}
}
\description{
dropSplit is designed to identify true cells from droplet-based scRNAseq data.
It consists of three parts: quality control for all droplets, model construction, cell identification.
dropSplit provides some special QC metrics such as CellEntropy or CellGini which can help identification.
In general, user can use the predefined parameters in the XGBoost and get the important features that help in cell identification.
It also implements a automatic XGBoost hyperparameters-tuning function to optimize the model.
}
\examples{
counts <- DropletUtils:::simCounts()
colnames(counts) <- paste0("Cell-", 1:ncol(counts))
result <- dropSplit(counts)
head(result$meta_info)
}
